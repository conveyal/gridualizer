{"version":3,"sources":["choropleth.js"],"names":["ChoroplethColorizer","breaks","colors","clampTo","length","value","i","z"],"mappings":";;;;;;AAAA;;AAEA,IAAMA,sBAAsB,SAAtBA,mBAAsB,CAACC,MAAD,EAASC,MAAT,EAAoB;AAC9C,MAAMC,UAAUF,OAAOA,OAAOG,MAAP,GAAgB,CAAvB,CAAhB;AACAF,WAAS,2BAAgBA,MAAhB,CAAT;AACA,SAAO,UAACG,KAAD,EAAW;AAChB,QAAIA,QAAQF,OAAZ,EAAqBE,QAAQF,OAAR;AACrB,SAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIL,OAAOG,MAA3B,EAAmCE,GAAnC,EAAwC;AACtC,UAAMC,IAAIN,OAAOK,CAAP,CAAV;AACA,UAAID,SAASE,CAAb,EAAgB,OAAOL,OAAOI,CAAP,CAAP;AACjB;AACF,GAND;AAOD,CAVD;;kBAYeN,mB","file":"choropleth.js","sourcesContent":["import { normalizeColors } from '../util'\n\nconst ChoroplethColorizer = (breaks, colors) => {\n  const clampTo = breaks[breaks.length - 1]\n  colors = normalizeColors(colors)\n  return (value) => {\n    if (value > clampTo) value = clampTo\n    for (let i = 0; i < breaks.length; i++) {\n      const z = breaks[i]\n      if (value <= z) return colors[i]\n    }\n  }\n}\n\nexport default ChoroplethColorizer\n"]}