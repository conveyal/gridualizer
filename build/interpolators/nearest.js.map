{"version":3,"sources":["nearest.js"],"names":["NearestNeighborInterpolator","grid","gridX","gridY","z","yFraction","xFraction","gridOffset"],"mappings":";;;;;;AAAA;;AAEA;;;;;AAKA,IAAMA,8BAA8B,SAA9BA,2BAA8B,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAwB;AAC1D,MAAMC,IAAI,wBAAaH,IAAb,EAAmBC,KAAnB,EAA0BC,KAA1B,CAAV;AACA,SAAO,UAAUE,SAAV,EAAqB;AAC1B,WAAO,UAACC,SAAD;AAAA,aAAeF,CAAf;AAAA,KAAP;AACD,GAFD;AAGD,CALD;AAMAJ,4BAA4BO,UAA5B,GAAyC,CAAzC;kBACeP,2B","file":"nearest.js","sourcesContent":["import {getGridValue} from '../util'\n\n/**\n * A nearest-neighbor interpolation patch for a 2x2 grid of samples.\n * This just returns a constant value from the upper left corner of the patch.\n * The nested functions are just to be coherent with the other interpolators, which work row by row.\n */\nconst NearestNeighborInterpolator = (grid, gridX, gridY) => {\n  const z = getGridValue(grid, gridX, gridY)\n  return function (yFraction) {\n    return (xFraction) => z\n  }\n}\nNearestNeighborInterpolator.gridOffset = 0\nexport default NearestNeighborInterpolator\n"]}