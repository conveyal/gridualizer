{"version":3,"sources":["diverging.js"],"names":["describe","it","data","Int32Array","i","expect","scheme","center","max","min","toEqual"],"mappings":";;AAEA;;;;AACA;;;;;;AAHA;;AAKAA,SAAS,yBAAT,EAAoC,YAAM;AACxCC,KAAG,aAAH,EAAkB,YAAM;AACtB,QAAMC,OAAO,IAAIC,UAAJ,CAAe,GAAf,CAAb;AACA;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB;AAA8BF,WAAKE,CAAL,IAAUA,IAAI,CAAJ,GAAQ,CAAlB;AAA9B,KAEAC,OAAO,yBAAU;AACfC,qCADe;AAEfC,cAAQ;AAFO,KAAV,EAGJ;AACDL,gBADC;AAEDM,WAAK,CAFJ;AAGDC,WAAK,CAAC;AAHL,KAHI,EAOJ,CAPI,CAAP,EAOOC,OAPP,CAOe,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAPf;AAQD,GAbD;AAcD,CAfD","file":"diverging.js","sourcesContent":["/* global describe, it, expect */\n\nimport diverging from '../diverging'\nimport equal from '../equal-interval'\n\ndescribe('classifiers > diverging', () => {\n  it('should work', () => {\n    const data = new Int32Array(900)\n    // yields even dispersion between -4 and +4\n    for (let i = 0; i < 900; i++) data[i] = i % 9 - 4\n\n    expect(diverging({\n      scheme: equal,\n      center: 0\n    })({\n      data,\n      max: 4,\n      min: -4\n    }, 3)).toEqual([-2, 2, 4])\n  })\n})\n"]}